{"version":3,"sources":["Components/Warden/WardenHeader.js","Components/Warden/WardenDashboard.js","Components/Warden/WardenComponents.js","Components/Login/Login.js","Components/Student/StudentHeader.js","Components/Student/StudentDashboard.js","Components/Student/StudentComponents.js","Components/RouteComponent.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["WardenHeader","props","Navbar","bg","Brand","NavItem","className","to","WardenDashboard","Container","Row","Card","Body","Title","Text","Component","RenewComponent","Col","md","span","offset","Form","onSubmit","handleSubmitRenew","Group","Label","htmlFor","text","model","id","name","placeholder","Button","type","color","vals","alert","AddComponent","handleSubmitAdd","values","RegistrationComponent","onClick","isRequired","val","isCorrect","toLowerCase","Login","state","submitted","handleSubmit","bind","this","setState","username","RouteTo","validators","show","messages","password","StudentHeader","StudentDashboard","ServicesComponent","ProfileComponent","DuesComponent","handleSubmitPay","withRouter","path","component","exact","App","RouteComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5835f059.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function WardenHeader(props) {\r\n    return (\r\n        <Navbar bg=\"light\">\r\n            <Navbar.Brand>Warden</Navbar.Brand>\r\n            <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/warden\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                </NavLink>\r\n            </NavItem>\r\n        </Navbar>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport WardenHeader from './WardenHeader';\r\nimport { Container, Card, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class WardenDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <WardenHeader />\r\n                <Container className=\"mt-5\">\r\n                    <Row>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Renew Room</Card.Title>\r\n                                <Card.Text>\r\n                                    Renew Student's Room\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/warden/renew\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Add Students</Card.Title>\r\n                                <Card.Text>\r\n                                    Make Student Account\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/warden/add\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Student Registration</Card.Title>\r\n                                <Card.Text>\r\n                                    Delete Student Account, Give Mess Pass, Search & Edit Student Profile\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/warden/registration\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport WardenHeader from './WardenHeader';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function RenewComponent(props) {\r\n    return (\r\n        <>\r\n            <WardenHeader />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <LocalForm onSubmit={handleSubmitRenew}>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"username\">Enter ID Of Student</Form.Label>\r\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                        placeholder=\"Enter Student ID\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Renew Room\r\n                                </Button>\r\n                            </LocalForm>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction handleSubmitRenew(vals) {\r\n    alert(\"Student Room Renewed\");\r\n}\r\n\r\nexport function AddComponent(props) {\r\n    return (\r\n        <>\r\n            <WardenHeader />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <LocalForm onSubmit={handleSubmitAdd}>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"name\">Enter Name Of Student</Form.Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"username\">Enter User Name for Student</Form.Label>\r\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                        placeholder=\"User Name\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"email\">Enter Email Of Student</Form.Label>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"password\">Enter Password for Student</Form.Label>\r\n                                    <Control.text model=\".password\" id=\"password\" name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"University\">Enter University of Student</Form.Label>\r\n                                    <Control.text model=\".university\" id=\"university\" name=\"university\"\r\n                                        placeholder=\"University\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Add Account\r\n                                </Button>\r\n                            </LocalForm>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction handleSubmitAdd(values) {\r\n    alert(\"Student Account Created\");\r\n}\r\n\r\nexport function RegistrationComponent(props) {\r\n    return (\r\n        <>\r\n            <WardenHeader />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <LocalForm>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"name\">Enter Student ID</Form.Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"ID\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </LocalForm>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"offset-3\">\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Account Deleted\")}>Delete Student Account</Button>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Mess Pass Given\")}>Give Mess Pass</Button>\r\n                    <Link className=\"btn btn-primary ml-3\" to=\"/student/profile\">Open/Edit Profile</Link>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"container mt-5\">\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { Component }from 'react';\r\nimport { Navbar, Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { RouteTo } from '../RouteComponent';\r\n\r\nlet isRequired = (val) => {\r\n    if (val) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nlet isCorrect = (val) => {\r\n    if (!isRequired(val)) {\r\n        return false;\r\n    }\r\n    if (val.toLowerCase() === \"warden\" || val.toLowerCase() === \"student\") {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitted: false,\r\n            name: \"\"\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.setState({\r\n            submitted: true,\r\n            name: values.username\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.submitted) {\r\n            return (\r\n                <RouteTo name={this.state.name} />\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    <Navbar bg=\"light\">\r\n                        <Navbar.Brand>Hostel Management System</Navbar.Brand>\r\n                    </Navbar>\r\n                    <Container className=\"mt-5\">\r\n                        <Row>\r\n                            <Col md={{ span: 6, offset: 3 }}>\r\n                                <Form>\r\n                                    <LocalForm onSubmit={this.handleSubmit}>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"username\">User Name</Form.Label>\r\n                                            <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                                placeholder=\"Enter User Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    isRequired, isCorrect\r\n                                                }}\r\n                                            />\r\n                                            <Errors\r\n                                                model=\".username\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    isRequired: \"Required Field\",\r\n                                                    isCorrect: \"Enter Warden or Student as Username\"\r\n                                                }}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                            <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                                placeholder=\"Enter Password\"\r\n                                                className=\"form-control \"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Login\r\n                                        </Button>\r\n                                    </LocalForm>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function StudentHeader(props) {\r\n    return (\r\n        <Navbar bg=\"light\">\r\n            <Navbar.Brand>Student</Navbar.Brand>\r\n            <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/student\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                </NavLink>\r\n            </NavItem>\r\n        </Navbar>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport StudentHeader from './StudentHeader';\r\nimport { Container, Card, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class StudentDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <StudentHeader />\r\n                <Container className=\"mt-5\">\r\n                    <Row>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Services</Card.Title>\r\n                                <Card.Text>\r\n                                    Renew Room, Maintenance & Transport, Cancel Registration\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/student/services\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Access Student Profile</Card.Title>\r\n                                <Card.Text>\r\n                                    View & Edit Profile\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/student/profile\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"col-md-3 ml-2 mb-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Dues</Card.Title>\r\n                                <Card.Text>\r\n                                    Pay Dues\r\n                                </Card.Text>\r\n                                <Link className=\"btn btn-primary\" to=\"/student/dues\">Click Here</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport StudentHeader from './StudentHeader';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\n\r\nexport function ServicesComponent(props) {\r\n    return (\r\n        <>\r\n            <StudentHeader />\r\n            <div className=\"container mt-5\">\r\n                <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Room Renewed\")}>Renew Room</Button>\r\n                <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Maintenance Called\")}>Call Maintenance</Button>\r\n                <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Transport Called\")}>Call Transport</Button>\r\n                <Button className=\"ml-3\" color=\"primary\" onClick={() => alert(\"Registration Canceled\")}>Cancel Registration</Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ProfileComponent(props) {\r\n    return (\r\n        <>\r\n            <StudentHeader />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <LocalForm onSubmit={handleSubmitAdd}>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"name\">Enter Name Of Student</Form.Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Ahmed Bilal\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"username\">Enter User Name for Student</Form.Label>\r\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                        placeholder=\"billoo69\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"email\">Enter Email Of Student</Form.Label>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"billa1969@gmail.com\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"password\">Enter Password for Student</Form.Label>\r\n                                    <Control.text model=\".password\" id=\"password\" name=\"password\"\r\n                                        placeholder=\"Change Password\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"University\">Enter University of Student</Form.Label>\r\n                                    <Control.text model=\".university\" id=\"university\" name=\"university\"\r\n                                        placeholder=\"CAMSTATUS Uni\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Change Info\r\n                                </Button>\r\n                            </LocalForm>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction handleSubmitAdd(values) {\r\n    alert(\"Student Account Edited\");\r\n}\r\n\r\nexport function DuesComponent(props) {\r\n    return (\r\n        <>\r\n            <StudentHeader />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form>\r\n                            <LocalForm onSubmit={handleSubmitPay}>\r\n                                <Form.Group>\r\n                                    <Form.Label htmlFor=\"name\">Enter Bank ID</Form.Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"ID\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Pay Dues\r\n                                </Button>\r\n                            </LocalForm>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction handleSubmitPay(values) {\r\n    alert(\"Dues Payed\");\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { WardenDashboard } from './Warden/WardenDashboard';\r\nimport { RenewComponent, AddComponent, RegistrationComponent } from './Warden/WardenComponents';\r\nimport { Login } from './Login/Login';\r\nimport { StudentDashboard} from './Student/StudentDashboard';\r\nimport { ServicesComponent, ProfileComponent, DuesComponent } from './Student/StudentComponents';\r\n\r\nfunction RouterComponent() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route exact path=\"/warden\" component={WardenDashboard} />\r\n                <Route exact path=\"/warden/renew\" component={RenewComponent} />\r\n                <Route exact path=\"/warden/add\" component={AddComponent} />\r\n                <Route exact path=\"/warden/registration\" component={RegistrationComponent} />\r\n                <Route exact path=\"/student\" component={StudentDashboard} />\r\n                <Route exact path=\"/student/services\" component={ServicesComponent} />\r\n                <Route exact path=\"/student/profile\" component={ProfileComponent} />\r\n                <Route exact path=\"/student/dues\" component={DuesComponent} />\r\n                <Redirect to=\"/login\" />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function RouteTo({ name }) {\r\n    if (name.toLowerCase() === \"warden\") {\r\n        return (\r\n            <Redirect to=\"/warden\"/>\r\n        );\r\n    } else {\r\n        return (\r\n            <Redirect to=\"/student\" />\r\n        );\r\n    }\r\n}; \r\n\r\n\r\nexport default withRouter(RouterComponent);\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport RouteComponent from './Components/RouteComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <RouteComponent />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}